{"version":3,"sources":["Menu.js","Quiz.js","App.js","reportWebVitals.js","index.js","define.js","controller.js"],"names":["DEF","require","Controller","Login","props","useState","pass","setPass","name","setName","isWrong","triedLogin","isLogin","Modal","show","onHide","backdrop","keyboard","Header","Title","Body","Form","Row","className","Group","as","controlId","Label","column","sm","Col","Control","type","placeholder","onChange","e","target","value","isInvalid","Feedback","Footer","Button","variant","onClick","checkLogin","Menu","cookies","state","JSON","parse","get","categories","selectCategories","ratings","selectRatings","targetCount","quesNumber","loadingQuiz","getCategoryList","then","data","setState","getRatingList","prevProps","prevState","snapshot","stringify","this","getQuizCount","userId","res","set","id","includes","filter","n","sort","concat","push","length","Number","startQuiz","changeMode","APP_MODE","QUIZ","startButtontext","Spinner","animation","size","role","aria-hidden","Container","logout","mb","categoryChangeAll","map","category","Check","inline","label","categoryChange","checked","ratingChangeAll","rating","repeat","ratingChange","max","min","step","block","disabled","React","Component","withCookies","gfm","md_components","code","node","match","exec","language","PreTag","style","vs","Question","remarkPlugins","components","Choices","choiceList","choices","ToggleButtonGroup","vertical","input","choice","idx","isAnswered","correct","select","answer","ToggleButton","TextBox","InputGroup","Prepend","Text","FormControl","aria-label","aria-describedby","i","readOnly","isValid","UserInput","inputEl","question","Result","isCorrect","headMsg","Alert","transition","Collapse","Heading","comment","Game","getCurrentQuestion","Array","isArray","applyResult","sentence","changeInput","clickOK","Quiz","Pose","posed","div","visible","opacity","duration","ease","hidden","App","att","nextMode","onChangeMode","MODE_ELEMENTS","Map","MENU","mode","isVisible","next","delayFunc","time","Promise","callback","setTimeout","pose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById","module","exports","axios","create","baseURL","headers","responseType","response","catch","error","console","categoryList","ratingList","post","result"],"mappings":"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","file":"static/js/main.50143028.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Form, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { instanceOf } from 'prop-types';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport { BsPower } from 'react-icons/bs';\r\n\r\nvar DEF = require(\"./define\");\r\nvar Controller = require(\"./controller\");\r\n\r\nfunction Login(props) {\r\n  const [pass, setPass] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  var isWrong = props.triedLogin && !props.isLogin;\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={!props.isLogin}\r\n        onHide={() => { }}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Login</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Row className=\"ml-2 mb-3\">ログインしろよ（笑）</Row>\r\n\r\n            {/* ユーザー名 */}\r\n            <Form.Group as={Row} controlId=\"formPlaintextUserId\">\r\n              <Form.Label column sm=\"2\">\r\n                User ID\r\n              </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control type=\"text\" placeholder=\"Password\" onChange={(e) => { setName(e.target.value) }} />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            {/* パスワード */}\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n              <Form.Label column sm=\"2\">\r\n                Password\r\n              </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => { setPass(e.target.value) }} isInvalid={isWrong} />\r\n                {isWrong && <Form.Control.Feedback type=\"invalid\">間違っとるよ（笑）</Form.Control.Feedback>}\r\n              </Col>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={(e) => props.checkLogin(pass, name)}>OK</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>);\r\n}\r\n\r\nclass Menu extends React.Component {\r\n  static propTypes = {\r\n    cookies: instanceOf(Cookies).isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { cookies } = props;\r\n\r\n    this.state = {\r\n      // ログインしているか\r\n      isLogin: JSON.parse(cookies.get('isLogin')) || false,\r\n      // 一度ログインOKボタンが押されたか\r\n      triedLogin: false,\r\n      // 全カテゴリリスト\r\n      categories: [],\r\n      // 選択カテゴリリスト\r\n      selectCategories: [],\r\n      // 全レーティングリスト\r\n      ratings: [],\r\n      // 選択レーティングリスト\r\n      selectRatings: [],\r\n      // 対象問題数\r\n      targetCount: 0,\r\n      // 出題数\r\n      quesNumber: 0,\r\n      // クイズ読み込み中\r\n      loadingQuiz: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Controller.getCategoryList().then(data => {\r\n      this.setState({ categories: data, selectCategories: data });\r\n    });\r\n\r\n    Controller.getRatingList().then(data => {\r\n      this.setState({ ratings: data, selectRatings: data });\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (JSON.stringify(this.state.selectCategories) !== JSON.stringify(prevState.selectCategories) || JSON.stringify(this.state.selectRatings) !== JSON.stringify(prevState.selectRatings)) {\r\n      Controller.getQuizCount(this.state.selectCategories, this.state.selectRatings).then(data => {\r\n        this.setState({ targetCount: data, quesNumber: data });\r\n      });\r\n    }\r\n  }\r\n\r\n  checkLogin(pass, userId) {\r\n    const { cookies } = this.props;\r\n\r\n    var res = pass === \"wara\";\r\n    this.setState({\r\n      isLogin: res,\r\n      triedLogin: true\r\n    });\r\n\r\n    cookies.set('isLogin', res);\r\n    if (res) cookies.set('userId', userId);\r\n  }\r\n\r\n  logout() {\r\n    const { cookies } = this.props;\r\n    this.setState({\r\n      isLogin: false,\r\n      triedLogin: false\r\n    });\r\n    cookies.set('isLogin', false);\r\n    cookies.set('userId', '');\r\n  }\r\n\r\n  categoryChange(id) {\r\n    var selectCategories = this.state.selectCategories;\r\n\r\n    if (selectCategories.includes(id)) {\r\n      selectCategories = selectCategories.filter(n => n !== id).sort();\r\n    } else {\r\n      selectCategories = selectCategories.concat(); // 変更差分が検知できないのでコピーする\r\n      selectCategories.push(id);\r\n    }\r\n\r\n    this.setState({ selectCategories: selectCategories });\r\n  }\r\n\r\n  categoryChangeAll() {\r\n    var selectCategories = this.state.selectCategories;\r\n\r\n    if (selectCategories.length === this.state.categories.length) {\r\n      selectCategories = [];\r\n    } else {\r\n      selectCategories = this.state.categories.concat();\r\n    }\r\n\r\n    this.setState({ selectCategories: selectCategories });\r\n  }\r\n\r\n  ratingChange(id) {\r\n    var selectRatings = this.state.selectRatings;\r\n\r\n    if (selectRatings.includes(Number(id))) {\r\n      selectRatings = selectRatings.filter(n => n !== Number(id)).sort();\r\n    } else {\r\n      selectRatings = selectRatings.concat();\r\n      selectRatings.push(Number(id));\r\n    }\r\n\r\n    this.setState({ selectRatings: selectRatings });\r\n  }\r\n\r\n  ratingChangeAll() {\r\n    var selectRatings = this.state.selectRatings;\r\n\r\n    if (selectRatings.length === this.state.ratings.length) {\r\n      selectRatings = [];\r\n    } else {\r\n      selectRatings = this.state.ratings.concat();\r\n    }\r\n\r\n    this.setState({ selectRatings: selectRatings });\r\n  }\r\n\r\n  startQuiz() {\r\n    this.setState({ loadingQuiz: true });\r\n    Controller.startQuiz(this.state.selectCategories, this.state.selectRatings, this.state.quesNumber).then(data => {\r\n      this.setState({ loadingQuiz: false });\r\n      this.props.changeMode(DEF.APP_MODE.QUIZ);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { cookies } = this.props;\r\n\r\n    var startButtontext;\r\n    if (this.state.loadingQuiz) {\r\n      startButtontext = <div><Spinner\r\n        as=\"span\"\r\n        animation=\"grow\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n      />\r\n      読み込み中</div>;\r\n    } else {\r\n      startButtontext = <div>開始</div>;\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <h1>メニュー</h1> ユーザー名: {cookies.get('userId')} <Button variant=\"link\" onClick={(e) => this.logout()}>{' '}<BsPower />ログアウト</Button>\r\n\r\n        <Login isLogin={this.state.isLogin} triedLogin={this.state.triedLogin} checkLogin={(pass, name) => this.checkLogin(pass, name)} />\r\n\r\n        {/* カテゴリ */}\r\n        <Form className=\"border border-dark rounded\">\r\n          <Form.Group as={Row} controlId=\"category\" mb={3} className=\"mt-3 mx-3\">\r\n            <Form.Label column sm={3}>\r\n              カテゴリ\r\n            </Form.Label>\r\n            <Col>\r\n              <Button variant=\"outline-primary\" size=\"sm\" onClick={e => this.categoryChangeAll()}>\r\n                すべて切り替え\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"10\">\r\n              <Row>\r\n                {\r\n                  this.state.categories.map((category) =>\r\n                    <Form.Check inline label={category} type=\"checkbox\" id={category} onChange={(e) => this.categoryChange(e.target.id)} checked={this.state.selectCategories.includes(category)} />\r\n                  )\r\n                }\r\n              </Row>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          {/* レーティング */}\r\n          <Form.Group as={Row} controlId=\"rating\" mb={3} className=\"mt-3 mx-3\">\r\n            <Form.Label column sm={3}>\r\n              レーティング\r\n              </Form.Label>\r\n            <Col>\r\n              <Button variant=\"outline-primary\" size=\"sm\" onClick={e => this.ratingChangeAll()}>\r\n                すべて切り替え\r\n                </Button>\r\n            </Col>\r\n            <Col sm=\"10\">\r\n              <Row>\r\n                {\r\n                  this.state.ratings.map((rating) =>\r\n                    <Form.Check inline label={\"☆\".repeat(rating)} type=\"checkbox\" id={rating} onChange={(e) => this.ratingChange(e.target.id)} checked={this.state.selectRatings.includes(rating)} />\r\n                  )\r\n                }\r\n              </Row>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} controlId=\"NumberOfQuestions\" mb={3} className=\"mt-3 mx-3\">\r\n            <Form.Label column sm=\"2\">\r\n              出題数 <br />\r\n              (対象問題数: {this.state.targetCount})\r\n            </Form.Label>\r\n            <Col sm=\"5\">\r\n              <Form.Control type=\"number\" max={this.state.targetCount} min={0} step={10} value={this.state.quesNumber} onChange={(e) => this.setState({ quesNumber: Number(e.target.value) })} />\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <Row className=\"d-grid gap-2 col-6 mx-auto mt-3\" mb={3}>\r\n          <Button variant=\"primary\" size=\"lg\" block onClick={(e) => this.startQuiz()} disabled={this.state.quesNumber <= 0}>\r\n            {startButtontext}\r\n          </Button>\r\n        </Row>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withCookies(Menu);","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  ToggleButtonGroup,\r\n  ToggleButton,\r\n  Button,\r\n  Alert,\r\n  Collapse,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\n\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\r\nimport { vs } from 'react-syntax-highlighter/dist/esm/styles/prism'\r\nconst gfm = require('remark-gfm');\r\n\r\nvar DEF = require(\"./define\");\r\nvar Controller = require(\"./controller\");\r\n\r\nconst md_components = {\r\n  code({ node, className, ...props }) {\r\n    const match = /language-(\\w+)/.exec(className || '')\r\n    return match\r\n      ? <SyntaxHighlighter language={match[1]} PreTag=\"div\" style={vs} {...props} />\r\n      : <code className={className} {...props} />\r\n  }\r\n}\r\n\r\nfunction Question(props) {\r\n  return (\r\n    <div className=\"question\">\r\n      <ReactMarkdown remarkPlugins={[gfm]} components={md_components} className=\"line-break\">\r\n        {props.value}\r\n      </ReactMarkdown>\r\n    </div>);\r\n}\r\n\r\nfunction Choices(props) {\r\n  const choiceList = props.choices;\r\n\r\n  return (\r\n    <ToggleButtonGroup\r\n      type={props.type}\r\n      name=\"options\"\r\n      vertical\r\n      className=\"choices\"\r\n      value={props.input}\r\n      onChange={props.onChange}\r\n    >\r\n      {choiceList.map((choice, idx) => {\r\n        var variant = \"outline-dark\";\r\n        // 回答後ならボタンの色を変える\r\n        if (props.isAnswered) {\r\n          var correct = false, select = false;\r\n\r\n          // 一択\r\n          if (props.type === \"radio\") {\r\n            correct = (idx === props.answer);\r\n            select = (idx === props.input);\r\n\r\n            // 正解・選択\r\n            if (correct && select) {\r\n              variant = \"success\";\r\n            }\r\n            // 正解・未選択\r\n            else if (correct) {\r\n              variant = \"warning\";\r\n            }\r\n            // 不正解・選択\r\n            else if (select) {\r\n              variant = \"danger\";\r\n            }\r\n          }\r\n          // 複数回答\r\n          else if (props.type === \"checkbox\") {\r\n            correct = (props.answer.includes(idx));\r\n            select = (props.input.includes(idx));\r\n\r\n            // 正解・選択\r\n            if (correct && select) {\r\n              variant = \"success\";\r\n            }\r\n            // 正解・未選択\r\n            else if (correct) {\r\n              variant = \"warning\";\r\n            }\r\n            // 不正解・選択\r\n            else if (select) {\r\n              variant = \"danger\";\r\n            }\r\n          }\r\n        }\r\n\r\n        return (\r\n          <ToggleButton\r\n            key={idx}\r\n            variant={variant}\r\n            className=\"choice mt-2\"\r\n            name=\"radio\"\r\n            value={idx}\r\n            disabled={props.isAnswered}\r\n          >\r\n            {choice}\r\n          </ToggleButton>\r\n        );\r\n      })}\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n\r\nfunction TextBox(props) {\r\n  var isWrong = props.isAnswered && props.input !== props.answer;\r\n\r\n  return (\r\n    <InputGroup className=\"mb-3\">\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text id=\"inputGroup-sizing-default\">回答</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n\r\n      <FormControl\r\n        aria-label=\"Default\"\r\n        aria-describedby=\"inputGroup-sizing-default\"\r\n        onChange={(i) => props.onChange(i.target.value)}\r\n        readOnly={props.isAnswered}\r\n        isInvalid={isWrong}\r\n        isValid={props.isAnswered && !isWrong}\r\n      />\r\n      {isWrong && <FormControl.Feedback type=\"invalid\">\r\n        {\"答え: \" + props.answer}\r\n      </FormControl.Feedback>}\r\n\r\n    </InputGroup>\r\n  );\r\n}\r\n\r\nfunction UserInput(props) {\r\n  var inputEl = <div />;\r\n\r\n  var choices = props.question.choices;\r\n  var onChange = props.onChange;\r\n  var isAnswered = props.state.isAnswered;\r\n  var input = props.state.input;\r\n  var answer = props.question.answer;\r\n  var type = props.question.type;\r\n\r\n  if (type === \"radio\" || type === \"checkbox\") {\r\n    inputEl = (\r\n      <Choices\r\n        choices={choices}\r\n        onChange={onChange}\r\n        isAnswered={isAnswered}\r\n        input={input}\r\n        answer={answer}\r\n        type={type}\r\n      />\r\n    );\r\n  } else if (type === \"text\") {\r\n    inputEl = (\r\n      <TextBox\r\n        onChange={onChange}\r\n        isAnswered={isAnswered}\r\n        input={input}\r\n        answer={answer}\r\n        type={type}\r\n      />\r\n    );\r\n  }\r\n\r\n  return inputEl;\r\n}\r\n\r\nfunction Result(props) {\r\n  var variant = props.isCorrect ? \"success\" : \"danger\";\r\n  var headMsg = props.isCorrect ? \"正解！\" : \"不正解！ｗ\";\r\n\r\n  return (\r\n    <>\r\n      <Alert variant={variant} show={props.show} transition={Collapse}>\r\n        <Alert.Heading>{headMsg}</Alert.Heading>\r\n        <hr />\r\n        <p className=\"mb-0\">\r\n          <ReactMarkdown remarkPlugins={[gfm]} components={md_components} className=\"line-break\">\r\n            {props.comment}\r\n          </ReactMarkdown>\r\n        </p>\r\n      </Alert>\r\n    </>\r\n  );\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: null,\r\n      isAnswered: false,\r\n      isCorrect: false,\r\n      quesNumber: 0,\r\n      question: {\r\n        \"sentence\": \"\",\r\n        \"type\": \"\",\r\n        \"choices\": \"\",\r\n        \"answer\": 0,\r\n        \"comment\": \"\"\r\n      },\r\n      // クイズ読み込み中\r\n      loadingQuiz: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Controller.getCurrentQuestion().then(data => {\r\n      this.setState({ question: data.question, quesNumber: data.quesNumber });\r\n    });\r\n  }\r\n\r\n  changeInput(i) {\r\n    var input = i;\r\n\r\n    // 配列はソートする\r\n    if (Array.isArray(input)) {\r\n      input.sort();\r\n    }\r\n\r\n    this.setState({\r\n      input: input\r\n    });\r\n  }\r\n\r\n  clickOK(e) {\r\n    if (!this.state.isAnswered) {\r\n      // 答え合わせ\r\n      this.setState({\r\n        isAnswered: true,\r\n        isCorrect:\r\n          JSON.stringify(this.state.input) ===\r\n          JSON.stringify(this.state.question.answer)\r\n      });\r\n    } else {\r\n      // 次の問題へ\r\n      this.setState({ loadingQuiz: true });\r\n      Controller.applyResult(this.state.isCorrect).then(data => {\r\n        Controller.getCurrentQuestion().then(data => {\r\n          this.setState({\r\n            question: data.question,\r\n            quesNumber: data.quesNumber,\r\n            input: null,\r\n            isAnswered: false,\r\n            loadingQuiz: false\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"header\">{this.state.quesNumber + 1}問目</h1>\r\n\r\n        <Question value={this.state.question.sentence} />\r\n\r\n        <UserInput\r\n          onChange={(i) => this.changeInput(i)}\r\n          state={this.state}\r\n          question={this.state.question}\r\n        />\r\n\r\n        <Result\r\n          isCorrect={this.state.isCorrect}\r\n          comment={this.state.question.comment}\r\n          show={this.state.isAnswered}\r\n        />\r\n\r\n        <Button\r\n          variant=\"primary\"\r\n          size=\"lg\"\r\n          block\r\n          className=\"mt-4\"\r\n          onClick={(i) => this.clickOK(i)}\r\n          disabled={this.state.input == null || this.state.loadingQuiz}\r\n        >\r\n          {this.state.isAnswered ? ( this.state.loadingQuiz ? \"読み込み中…\" : \"次へ\") : \"決定\"}\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Quiz() {\r\n  return (\r\n    <Container>\r\n      <Game />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport posed from \"react-pose\";\n\nimport Menu from \"./Menu\";\nimport Quiz from \"./Quiz\";\n\nvar DEF = require(\"./define\");\n\nconst DELAY_TIME = 200;\n\nconst Pose = posed.div({\n  visible: {\n    opacity: 1,\n    transition: {\n      duration: DELAY_TIME,\n      ease: 'linear'\n    }\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      duration: DELAY_TIME,\n      ease: 'linear'\n    }\n  }\n});\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // タグに渡す属性\n    var att = { changeMode: (i) => this.setState({ nextMode: i, onChangeMode: true }) };\n\n    // モードとタグの対応\n    this.MODE_ELEMENTS = new Map();\n    this.MODE_ELEMENTS.set(DEF.APP_MODE.MENU, <Menu {...att} />);\n    this.MODE_ELEMENTS.set(DEF.APP_MODE.QUIZ, <Quiz {...att} />);\n\n    // 最初はメニュー画面\n    this.state = {\n      // 現在のモード\n      mode: DEF.APP_MODE.MENU,\n\n      // 遷移後のモード\n      nextMode: DEF.APP_MODE.MENU,\n      // モード切り替えが発生した直後\n      onChangeMode: false,\n      // 表示されているか\n      isVisible: true\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.onChangeMode) {\n      var next = this.state.nextMode;\n      this.setState({ onChangeMode: false, isVisible: false });\n\n      this.delayFunc(DELAY_TIME).then(() => {\n        this.setState({ mode: next, isVisible: true });\n      });\n    }\n  }\n\n  delayFunc(time) {\n    return new Promise(function (callback) {\n      setTimeout(function () {\n        callback();\n      }, time);\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Pose pose={this.state.isVisible ? \"visible\" : \"hidden\"}>{this.MODE_ELEMENTS.get(this.state.mode)}</Pose>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { CookiesProvider } from 'react-cookie';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var APP_MODE = {\r\n    MENU: 0,\r\n    QUIZ: 1\r\n};\r\n\r\nmodule.exports = {\r\n    APP_MODE\r\n};","const axiosBase = require('axios');\r\nconst axios = axiosBase.create({\r\n    baseURL: '',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    responseType: 'json'\r\n});\r\n\r\nexports.getCategoryList = function() {\r\n    return new Promise(function(callback) {\r\n        axios.get('/Menu/Categories')\r\n            .then(function(response) {\r\n                callback(response.data);\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"REST ERROR from /Menu/Categories\");\r\n            });\r\n    });\r\n}\r\n\r\nexports.getRatingList = function() {\r\n    return new Promise(function(callback) {\r\n        axios.get('/Menu/Ratings')\r\n            .then(function(response) {\r\n                callback(response.data);\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"REST ERROR from /Menu/Ratings\");\r\n            });\r\n    });\r\n}\r\n\r\nexports.getQuizCount = function(categoryList, ratingList) {\r\n    return new Promise(function(callback) {\r\n        // console.log(categoryList);\r\n        axios.post('/Menu/QuizCount', { categoryList: categoryList, ratingList: ratingList })\r\n            .then(function(response) {\r\n                callback(response.data);\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"REST ERROR from /Menu/QuizCount\\n\" + error);\r\n            });\r\n    });\r\n}\r\n\r\nexports.startQuiz = function(categoryList, ratingList, quesNumber) {\r\n    return new Promise(function(callback) {\r\n        // console.log(categoryList);\r\n        axios.post('/Quiz/Start', { categoryList: categoryList, ratingList: ratingList, quesNumber: quesNumber })\r\n            .then(function(response) {\r\n                callback(response.data);\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"REST ERROR from /Quiz/Start\\n\" + error);\r\n            });\r\n    });\r\n}\r\n\r\nexports.getCurrentQuestion = function() {\r\n    return new Promise(function(callback) {\r\n        // console.log(categoryList);\r\n        axios.post('/Quiz/Get')\r\n            .then(function(response) {\r\n                callback(response.data);\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"REST ERROR from /Quiz/Get\\n\" + error);\r\n            });\r\n    });\r\n}\r\n\r\nexports.applyResult = function(result) {\r\n    return new Promise(function(callback) {\r\n        axios.post('/Quiz/SetResult', { result: result })\r\n            .then(function(response) {\r\n                callback(response.data);\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"REST ERROR from /Quiz/Get\\n\" + error);\r\n            });\r\n    });\r\n}"],"sourceRoot":""}