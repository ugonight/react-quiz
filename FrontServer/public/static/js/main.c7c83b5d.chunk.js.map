{"version":3,"sources":["define.js","Menu.js","Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","APP_MODE","MENU","QUIZ","DEF","require","Login","props","useState","value","setValue","Modal","show","isLogin","onHide","backdrop","keyboard","Header","Title","Body","Form","Row","className","Group","as","controlId","Label","column","sm","Col","Control","type","placeholder","onChange","e","target","Footer","Button","variant","onClick","checkLogin","Menu","state","pass","res","this","setState","Container","i","mb","size","Check","inline","label","id","block","changeMode","React","Component","Question","Choices","choiceList","choices","ToggleButtonGroup","name","vertical","input","map","choice","idx","isAnswered","correct","select","answer","includes","ToggleButton","disabled","TextBox","InputGroup","Prepend","Text","OverlayTrigger","placement","overlay","Tooltip","FormControl","aria-label","aria-describedby","readOnly","UserInput","inputEl","question","Result","isCorrect","headMsg","Alert","transition","Collapse","Heading","comment","Game","questionNum","file_json","questions","Array","isArray","sort","length","JSON","stringify","section","sentence","changeInput","clickOK","Quiz","App","att","mode","MODE_ELEMENTS","Map","set","get","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7c83b5d.chunk.js","sourcesContent":["var APP_MODE = {\r\n    MENU: 0,\r\n    QUIZ: 1\r\n};\r\n\r\nmodule.exports = {\r\n    APP_MODE\r\n};","import React,{useState} from \"react\";\r\nimport { Container, Row, Col, Form, Button, Modal } from \"react-bootstrap\";\r\nimport App from \"./App\";\r\n\r\nvar DEF = require(\"./define\");\r\n\r\nfunction Login(props) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={!props.isLogin}\r\n        onHide={()=>{}}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Login</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Row className=\"ml-2 mb-3\">ログインしろよ（笑）</Row>\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n              <Form.Label column sm=\"2\">\r\n                Password\r\n              </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e)=>{setValue(e.target.value)}}/>\r\n              </Col>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={(e) => props.checkLogin(value)}>OK</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>);\r\n}\r\n\r\nclass Menu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isLogin: false };\r\n  }\r\n\r\n  checkLogin(pass){\r\n    var res = pass === \"wara\";\r\n    this.setState({ isLogin: res });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h1>メニュー</h1>\r\n\r\n        <Login isLogin={this.state.isLogin} checkLogin={(i) => this.checkLogin(i)} />\r\n\r\n        <Form className=\"border border-dark rounded\">\r\n          <Form.Group as={Row} controlId=\"category\" mb={3} className=\"mt-3 mx-3\">\r\n            <Form.Label column sm=\"2\">\r\n              カテゴリ\r\n          </Form.Label>\r\n            <Col sm=\"10\">\r\n              <Row>\r\n                <Button variant=\"outline-primary\" size=\"sm\">\r\n                  すべて切り替え\r\n              </Button>\r\n                <div className=\"col-3\">対象問題数: 100</div>\r\n              </Row>\r\n              <Row>\r\n                <Form.Check inline label=\"chapter1\" type=\"checkbox\" id=\"1\" />\r\n                <Form.Check inline label=\"chapter2\" type=\"checkbox\" id=\"2\" />\r\n                <Form.Check inline label=\"chapter3\" type=\"checkbox\" id=\"3\" />\r\n              </Row>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} controlId=\"NumberOfQuestions\" mb={3} className=\"mt-3 mx-3\">\r\n            <Form.Label column sm=\"2\">\r\n              出題数\r\n          </Form.Label>\r\n            <Col sm=\"5\">\r\n              <Form.Control type=\"number\" />\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <Row className=\"d-grid gap-2 col-6 mx-auto mt-3\" mb={3}>\r\n          <Button variant=\"primary\" size=\"lg\" block onClick={(e) => this.props.changeMode(DEF.APP_MODE.QUIZ)} >\r\n            開始\r\n          </Button>\r\n        </Row>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  ToggleButtonGroup,\r\n  ToggleButton,\r\n  Button,\r\n  Alert,\r\n  Collapse,\r\n  InputGroup,\r\n  FormControl,\r\n  OverlayTrigger,\r\n  Tooltip\r\n} from \"react-bootstrap\";\r\n\r\nfunction Question(props) {\r\n  return <div className=\"question\">{props.value}</div>;\r\n}\r\n\r\nfunction Choices(props) {\r\n  const choiceList = props.choices;\r\n\r\n  return (\r\n    <ToggleButtonGroup\r\n      type={props.type}\r\n      name=\"options\"\r\n      vertical\r\n      className=\"choices\"\r\n      value={props.input}\r\n      onChange={props.onChange}\r\n    >\r\n      {choiceList.map((choice, idx) => {\r\n        var variant = \"outline-dark\";\r\n        // 回答後ならボタンの色を変える\r\n        if (props.isAnswered) {\r\n          var correct = false, select = false;\r\n\r\n          // 一択\r\n          if (props.type === \"radio\") {\r\n            correct = (idx === props.answer);\r\n            select = (idx === props.input);\r\n\r\n            // 正解・選択\r\n            if (correct && select) {\r\n              variant = \"success\";\r\n            }\r\n            // 正解・未選択\r\n            else if (correct) {\r\n              variant = \"warning\";\r\n            }\r\n            // 不正解・選択\r\n            else if (select) {\r\n              variant = \"danger\";\r\n            }\r\n          } \r\n          // 複数回答\r\n          else if (props.type === \"checkbox\") {\r\n            correct = (props.answer.includes(idx));\r\n            select = (props.input.includes(idx));\r\n\r\n            // 正解・選択\r\n            if (correct && select) {\r\n              variant = \"success\";\r\n            }\r\n            // 正解・未選択\r\n            else if (correct) {\r\n              variant = \"warning\";\r\n            }\r\n            // 不正解・選択\r\n            else if (select) {\r\n              variant = \"danger\";\r\n            }\r\n          }\r\n        }\r\n\r\n        return (\r\n          <ToggleButton\r\n            key={idx}\r\n            variant={variant}\r\n            className=\"choice mt-2\"\r\n            name=\"radio\"\r\n            value={idx}\r\n            disabled={props.isAnswered}\r\n          >\r\n            {choice}\r\n          </ToggleButton>\r\n        );\r\n      })}\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n\r\nfunction TextBox(props) {\r\n\r\n  return (\r\n    <InputGroup className=\"mb-3\">\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text id=\"inputGroup-sizing-default\">回答</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n\r\n      <OverlayTrigger\r\n        show={props.isAnswered && props.input !== props.answer}\r\n        placement=\"bottom-start\"\r\n        overlay={\r\n          <Tooltip>\r\n            {props.answer}\r\n          </Tooltip>\r\n        }>\r\n\r\n        <FormControl\r\n          aria-label=\"Default\"\r\n          aria-describedby=\"inputGroup-sizing-default\"\r\n          onChange={(i) => props.onChange(i.target.value)}\r\n          readOnly={props.isAnswered}\r\n        />\r\n\r\n      </OverlayTrigger>\r\n\r\n    </InputGroup>\r\n  );\r\n}\r\n\r\nfunction UserInput(props) {\r\n  var inputEl;\r\n\r\n  var choices = props.question.choices;\r\n  var onChange = props.onChange;\r\n  var isAnswered = props.state.isAnswered;\r\n  var input = props.state.input;\r\n  var answer = props.question.answer;\r\n  var type = props.question.type;\r\n\r\n  if (type === \"radio\" || type === \"checkbox\") {\r\n    inputEl = (\r\n      <Choices\r\n        choices={choices}\r\n        onChange={onChange}\r\n        isAnswered={isAnswered}\r\n        input={input}\r\n        answer={answer}\r\n        type={type}\r\n      />\r\n    );\r\n  } else if (type === \"text\") {\r\n    inputEl = (\r\n      <TextBox\r\n        onChange={onChange}\r\n        isAnswered={isAnswered}\r\n        input={input}\r\n        answer={answer}\r\n        type={type}\r\n      />\r\n    );\r\n  }\r\n\r\n  return inputEl;\r\n}\r\n\r\nfunction Result(props) {\r\n  var variant = props.isCorrect ? \"success\" : \"danger\";\r\n  var headMsg = props.isCorrect ? \"正解！\" : \"不正解！ｗ\";\r\n\r\n  return (\r\n    <>\r\n      <Alert variant={variant} show={props.show} transition={Collapse}>\r\n        <Alert.Heading>{headMsg}</Alert.Heading>\r\n        <hr />\r\n        <p className=\"mb-0\">{props.comment}</p>\r\n      </Alert>\r\n    </>\r\n  );\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: null,\r\n      isAnswered: false,\r\n      isCorrect: false,\r\n      questionNum: 0\r\n    };\r\n    this.file_json = require(\"./question01.json\");\r\n    this.question = this.file_json.questions[this.state.questionNum];\r\n  }\r\n\r\n  changeInput(i) {\r\n    var input = i;\r\n\r\n    // 配列はソートする\r\n    if (Array.isArray(input)) {\r\n      input.sort();\r\n    }\r\n\r\n    this.setState({\r\n      input: input\r\n    });\r\n  }\r\n\r\n  clickOK(e) {\r\n    if (!this.state.isAnswered) {\r\n      // 答え合わせ\r\n      this.setState({\r\n        isAnswered: true,\r\n        isCorrect:\r\n          JSON.stringify(this.state.input) ===\r\n          JSON.stringify(this.question.answer)\r\n      });\r\n    } else {\r\n      // 次の問題へ\r\n\r\n      var questionNum = this.state.questionNum + 1;\r\n      if (questionNum >= this.file_json.questions.length) {\r\n        questionNum = 0;\r\n      }\r\n\r\n      this.setState({\r\n        input: null,\r\n        isAnswered: false,\r\n        questionNum: questionNum\r\n      });\r\n      this.question = this.file_json.questions[questionNum];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"header\">{this.file_json.section}</h1>\r\n\r\n        <Question value={this.question.sentence} />\r\n\r\n        <UserInput\r\n          onChange={(i) => this.changeInput(i)}\r\n          state={this.state}\r\n          question={this.question}\r\n        />\r\n\r\n        <Result\r\n          isCorrect={this.state.isCorrect}\r\n          comment={this.question.comment}\r\n          show={this.state.isAnswered}\r\n        />\r\n\r\n        <Button\r\n          variant=\"primary\"\r\n          size=\"lg\"\r\n          block\r\n          className=\"mt-4\"\r\n          onClick={(i) => this.clickOK(i)}\r\n          disabled={this.state.input == null}\r\n        >\r\n          {this.state.isAnswered ? \"次へ\" : \"決定\"}\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Quiz() {\r\n  return (\r\n    <Container>\r\n      <Game />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nimport Menu from \"./Menu\";\nimport Quiz from \"./Quiz\";\n\nvar DEF = require(\"./define\");\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // タグに渡す属性\n    var att = { changeMode: (i) => this.setState({ mode: i }) };\n\n    // モードとタグの対応\n    this.MODE_ELEMENTS = new Map();\n    this.MODE_ELEMENTS.set(DEF.APP_MODE.MENU, <Menu {...att} />);\n    this.MODE_ELEMENTS.set(DEF.APP_MODE.QUIZ, <Quiz {...att} />);\n\n    // 最初はメニュー画面\n    this.state = { mode: DEF.APP_MODE.MENU };\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.MODE_ELEMENTS.get(this.state.mode)}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}