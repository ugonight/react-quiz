{"version":3,"sources":["define.js","controller.js","Menu.js","Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","APP_MODE","MENU","QUIZ","axios","require","create","baseURL","headers","responseType","getCategoryList","Promise","callback","get","then","response","data","catch","error","console","getRatingList","DEF","Controller","Login","props","useState","pass","setPass","name","setName","isWrong","triedLogin","isLogin","Modal","show","onHide","backdrop","keyboard","Header","Title","Body","Form","Row","className","Group","as","controlId","Label","column","sm","Col","Control","type","placeholder","onChange","e","target","value","isInvalid","Feedback","Footer","Button","variant","onClick","checkLogin","Menu","cookies","state","categories","selectCategories","ratings","selectRatings","setState","userId","this","res","set","id","includes","filter","n","sort","push","length","concat","Number","Container","mb","size","categoryChangeAll","map","category","Check","inline","label","categoryChange","checked","ratingChangeAll","rating","repeat","ratingChange","block","changeMode","React","Component","withCookies","Question","Choices","choiceList","choices","ToggleButtonGroup","vertical","input","choice","idx","isAnswered","correct","select","answer","ToggleButton","disabled","TextBox","InputGroup","Prepend","Text","FormControl","aria-label","aria-describedby","i","readOnly","isValid","UserInput","inputEl","question","Result","isCorrect","headMsg","Alert","transition","Collapse","Heading","comment","Game","questionNum","file_json","questions","Array","isArray","JSON","stringify","section","sentence","changeInput","clickOK","Quiz","App","att","mode","MODE_ELEMENTS","Map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.4f2af525.chunk.js","sourcesContent":["var APP_MODE = {\r\n    MENU: 0,\r\n    QUIZ: 1\r\n};\r\n\r\nmodule.exports = {\r\n    APP_MODE\r\n};","const axiosBase = require('axios');\r\nconst axios = axiosBase.create({\r\n    baseURL: '',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    responseType: 'json'\r\n});\r\n\r\nexports.getCategoryList = function() {\r\n    return new Promise(function(callback) {\r\n        axios.get('/Menu/Categories')\r\n            .then(function(response) {\r\n                callback(response.data);\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"REST ERROR from /Menu/Categories\");\r\n            });\r\n    });\r\n}\r\n\r\nexports.getRatingList = function() {\r\n    return new Promise(function(callback) {\r\n        axios.get('/Menu/Ratings')\r\n            .then(function(response) {\r\n                callback(response.data);\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"REST ERROR from /Menu/Ratings\");\r\n            });\r\n    });\r\n}","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Form, Button, Modal } from \"react-bootstrap\";\r\nimport { instanceOf } from 'prop-types';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\n\r\nvar DEF = require(\"./define\");\r\nvar Controller = require(\"./controller\");\r\n\r\nfunction Login(props) {\r\n  const [pass, setPass] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  var isWrong = props.triedLogin && !props.isLogin;\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={!props.isLogin}\r\n        onHide={() => { }}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Login</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Row className=\"ml-2 mb-3\">ログインしろよ（笑）</Row>\r\n\r\n            {/* ユーザー名 */}\r\n            <Form.Group as={Row} controlId=\"formPlaintextUserId\">\r\n              <Form.Label column sm=\"2\">\r\n                User ID\r\n              </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control type=\"text\" placeholder=\"Password\" onChange={(e) => { setName(e.target.value) }} />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            {/* パスワード */}\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n              <Form.Label column sm=\"2\">\r\n                Password\r\n              </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => { setPass(e.target.value) }} isInvalid={isWrong} />\r\n                {isWrong && <Form.Control.Feedback type=\"invalid\">間違っとるよ（笑）</Form.Control.Feedback>}\r\n              </Col>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={(e) => props.checkLogin(pass, name)}>OK</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>);\r\n}\r\n\r\nclass Menu extends React.Component {\r\n  static propTypes = {\r\n    cookies: instanceOf(Cookies).isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { cookies } = props;\r\n\r\n    this.state = {\r\n      isLogin: cookies.get('isLogin') || false,\r\n      triedLogin: false,\r\n      categories: [],\r\n      selectCategories: [],\r\n      ratings: [],\r\n      selectRatings: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Controller.getCategoryList().then(data => {\r\n      this.setState({ categories: data });\r\n    });\r\n\r\n    Controller.getRatingList().then(data => {\r\n      this.setState({ ratings: data });\r\n    });\r\n  }\r\n\r\n  checkLogin(pass, userId) {\r\n    const { cookies } = this.props;\r\n\r\n    var res = pass === \"wara\";\r\n    this.setState({\r\n      isLogin: res,\r\n      triedLogin: true\r\n    });\r\n\r\n    cookies.set('isLogin', res);\r\n    if (res) cookies.set('userId', userId);\r\n  }\r\n\r\n  categoryChange(id) {\r\n    var selectCategories = this.state.selectCategories;\r\n\r\n    if (selectCategories.includes(id)) {\r\n      selectCategories = selectCategories.filter(n => n !== id).sort();\r\n    } else {\r\n      selectCategories.push(id);\r\n    }\r\n\r\n    this.setState({ selectCategories: selectCategories });\r\n  }\r\n\r\n  categoryChangeAll() {\r\n    var selectCategories = this.state.selectCategories;\r\n\r\n    if (selectCategories.length === this.state.categories.length) {\r\n      selectCategories = [];\r\n    } else {\r\n      selectCategories = this.state.categories.concat();\r\n    }\r\n\r\n    this.setState({ selectCategories: selectCategories });\r\n  }\r\n\r\n  ratingChange(id) {\r\n    var selectRatings = this.state.selectRatings;\r\n\r\n    if (selectRatings.includes(Number(id))) {\r\n      selectRatings = selectRatings.filter(n => n !== Number(id)).sort();\r\n    } else {\r\n      selectRatings.push(Number(id));\r\n    }\r\n\r\n    this.setState({ selectRatings: selectRatings });\r\n  }\r\n\r\n  ratingChangeAll() {\r\n    var selectRatings = this.state.selectRatings;\r\n\r\n    if (selectRatings.length === this.state.ratings.length) {\r\n      selectRatings = [];\r\n    } else {\r\n      selectRatings = this.state.ratings.concat();\r\n    }\r\n\r\n    this.setState({ selectRatings: selectRatings });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h1>メニュー</h1>\r\n\r\n        <Login isLogin={this.state.isLogin} triedLogin={this.state.triedLogin} checkLogin={(pass, name) => this.checkLogin(pass, name)} />\r\n\r\n        {/* カテゴリ */}\r\n        <Form className=\"border border-dark rounded\">\r\n          <Form.Group as={Row} controlId=\"category\" mb={3} className=\"mt-3 mx-3\">\r\n            <Form.Label column sm={3}>\r\n              カテゴリ\r\n            </Form.Label>\r\n            <Col>\r\n              <Button variant=\"outline-primary\" size=\"sm\" onClick={e => this.categoryChangeAll()}>\r\n                すべて切り替え\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"10\">\r\n              <Row>\r\n                {\r\n                  this.state.categories.map((category) =>\r\n                    <Form.Check inline label={category} type=\"checkbox\" id={category} onChange={(e) => this.categoryChange(e.target.id)} checked={this.state.selectCategories.includes(category)} />\r\n                  )\r\n                }\r\n              </Row>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          {/* レーティング */}\r\n          <Form.Group as={Row} controlId=\"rating\" mb={3} className=\"mt-3 mx-3\">\r\n            <Form.Label column sm={3}>\r\n              レーティング\r\n              </Form.Label>\r\n              <Col>\r\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={e => this.ratingChangeAll()}>\r\n                  すべて切り替え\r\n                </Button>\r\n              </Col>\r\n            <Col sm=\"10\">\r\n              <Row>\r\n                {\r\n                  this.state.ratings.map((rating) =>\r\n                    <Form.Check inline label={\"☆\".repeat(rating)} type=\"checkbox\" id={rating} onChange={(e) => this.ratingChange(e.target.id)} checked={this.state.selectRatings.includes(rating)} />\r\n                  )\r\n                }\r\n              </Row>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} controlId=\"NumberOfQuestions\" mb={3} className=\"mt-3 mx-3\">\r\n            <Form.Label column sm=\"2\">\r\n              出題数\r\n          </Form.Label>\r\n            <Col sm=\"5\">\r\n              <Form.Control type=\"number\" />\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <Row className=\"d-grid gap-2 col-6 mx-auto mt-3\" mb={3}>\r\n          <Button variant=\"primary\" size=\"lg\" block onClick={(e) => this.props.changeMode(DEF.APP_MODE.QUIZ)} >\r\n            開始\r\n          </Button>\r\n        </Row>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withCookies(Menu);","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  ToggleButtonGroup,\r\n  ToggleButton,\r\n  Button,\r\n  Alert,\r\n  Collapse,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\n\r\nfunction Question(props) {\r\n  return <div className=\"question\">{props.value}</div>;\r\n}\r\n\r\nfunction Choices(props) {\r\n  const choiceList = props.choices;\r\n\r\n  return (\r\n    <ToggleButtonGroup\r\n      type={props.type}\r\n      name=\"options\"\r\n      vertical\r\n      className=\"choices\"\r\n      value={props.input}\r\n      onChange={props.onChange}\r\n    >\r\n      {choiceList.map((choice, idx) => {\r\n        var variant = \"outline-dark\";\r\n        // 回答後ならボタンの色を変える\r\n        if (props.isAnswered) {\r\n          var correct = false, select = false;\r\n\r\n          // 一択\r\n          if (props.type === \"radio\") {\r\n            correct = (idx === props.answer);\r\n            select = (idx === props.input);\r\n\r\n            // 正解・選択\r\n            if (correct && select) {\r\n              variant = \"success\";\r\n            }\r\n            // 正解・未選択\r\n            else if (correct) {\r\n              variant = \"warning\";\r\n            }\r\n            // 不正解・選択\r\n            else if (select) {\r\n              variant = \"danger\";\r\n            }\r\n          }\r\n          // 複数回答\r\n          else if (props.type === \"checkbox\") {\r\n            correct = (props.answer.includes(idx));\r\n            select = (props.input.includes(idx));\r\n\r\n            // 正解・選択\r\n            if (correct && select) {\r\n              variant = \"success\";\r\n            }\r\n            // 正解・未選択\r\n            else if (correct) {\r\n              variant = \"warning\";\r\n            }\r\n            // 不正解・選択\r\n            else if (select) {\r\n              variant = \"danger\";\r\n            }\r\n          }\r\n        }\r\n\r\n        return (\r\n          <ToggleButton\r\n            key={idx}\r\n            variant={variant}\r\n            className=\"choice mt-2\"\r\n            name=\"radio\"\r\n            value={idx}\r\n            disabled={props.isAnswered}\r\n          >\r\n            {choice}\r\n          </ToggleButton>\r\n        );\r\n      })}\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n\r\nfunction TextBox(props) {\r\n  var isWrong = props.isAnswered && props.input !== props.answer;\r\n\r\n  return (\r\n    <InputGroup className=\"mb-3\">\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text id=\"inputGroup-sizing-default\">回答</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n\r\n      <FormControl\r\n        aria-label=\"Default\"\r\n        aria-describedby=\"inputGroup-sizing-default\"\r\n        onChange={(i) => props.onChange(i.target.value)}\r\n        readOnly={props.isAnswered}\r\n        isInvalid={isWrong}\r\n        isValid={props.isAnswered && !isWrong}\r\n      />\r\n      {isWrong && <FormControl.Feedback type=\"invalid\">\r\n        {\"答え: \" + props.answer}\r\n      </FormControl.Feedback>}\r\n\r\n    </InputGroup>\r\n  );\r\n}\r\n\r\nfunction UserInput(props) {\r\n  var inputEl;\r\n\r\n  var choices = props.question.choices;\r\n  var onChange = props.onChange;\r\n  var isAnswered = props.state.isAnswered;\r\n  var input = props.state.input;\r\n  var answer = props.question.answer;\r\n  var type = props.question.type;\r\n\r\n  if (type === \"radio\" || type === \"checkbox\") {\r\n    inputEl = (\r\n      <Choices\r\n        choices={choices}\r\n        onChange={onChange}\r\n        isAnswered={isAnswered}\r\n        input={input}\r\n        answer={answer}\r\n        type={type}\r\n      />\r\n    );\r\n  } else if (type === \"text\") {\r\n    inputEl = (\r\n      <TextBox\r\n        onChange={onChange}\r\n        isAnswered={isAnswered}\r\n        input={input}\r\n        answer={answer}\r\n        type={type}\r\n      />\r\n    );\r\n  }\r\n\r\n  return inputEl;\r\n}\r\n\r\nfunction Result(props) {\r\n  var variant = props.isCorrect ? \"success\" : \"danger\";\r\n  var headMsg = props.isCorrect ? \"正解！\" : \"不正解！ｗ\";\r\n\r\n  return (\r\n    <>\r\n      <Alert variant={variant} show={props.show} transition={Collapse}>\r\n        <Alert.Heading>{headMsg}</Alert.Heading>\r\n        <hr />\r\n        <p className=\"mb-0\">{props.comment}</p>\r\n      </Alert>\r\n    </>\r\n  );\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: null,\r\n      isAnswered: false,\r\n      isCorrect: false,\r\n      questionNum: 0\r\n    };\r\n    this.file_json = require(\"./question01.json\");\r\n    this.question = this.file_json.questions[this.state.questionNum];\r\n  }\r\n\r\n  changeInput(i) {\r\n    var input = i;\r\n\r\n    // 配列はソートする\r\n    if (Array.isArray(input)) {\r\n      input.sort();\r\n    }\r\n\r\n    this.setState({\r\n      input: input\r\n    });\r\n  }\r\n\r\n  clickOK(e) {\r\n    if (!this.state.isAnswered) {\r\n      // 答え合わせ\r\n      this.setState({\r\n        isAnswered: true,\r\n        isCorrect:\r\n          JSON.stringify(this.state.input) ===\r\n          JSON.stringify(this.question.answer)\r\n      });\r\n    } else {\r\n      // 次の問題へ\r\n\r\n      var questionNum = this.state.questionNum + 1;\r\n      if (questionNum >= this.file_json.questions.length) {\r\n        questionNum = 0;\r\n      }\r\n\r\n      this.setState({\r\n        input: null,\r\n        isAnswered: false,\r\n        questionNum: questionNum\r\n      });\r\n      this.question = this.file_json.questions[questionNum];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"header\">{this.file_json.section}</h1>\r\n\r\n        <Question value={this.question.sentence} />\r\n\r\n        <UserInput\r\n          onChange={(i) => this.changeInput(i)}\r\n          state={this.state}\r\n          question={this.question}\r\n        />\r\n\r\n        <Result\r\n          isCorrect={this.state.isCorrect}\r\n          comment={this.question.comment}\r\n          show={this.state.isAnswered}\r\n        />\r\n\r\n        <Button\r\n          variant=\"primary\"\r\n          size=\"lg\"\r\n          block\r\n          className=\"mt-4\"\r\n          onClick={(i) => this.clickOK(i)}\r\n          disabled={this.state.input == null}\r\n        >\r\n          {this.state.isAnswered ? \"次へ\" : \"決定\"}\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Quiz() {\r\n  return (\r\n    <Container>\r\n      <Game />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nimport Menu from \"./Menu\";\nimport Quiz from \"./Quiz\";\n\nvar DEF = require(\"./define\");\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // タグに渡す属性\n    var att = { changeMode: (i) => this.setState({ mode: i }) };\n\n    // モードとタグの対応\n    this.MODE_ELEMENTS = new Map();\n    this.MODE_ELEMENTS.set(DEF.APP_MODE.MENU, <Menu {...att} />);\n    this.MODE_ELEMENTS.set(DEF.APP_MODE.QUIZ, <Quiz {...att} />);\n\n    // 最初はメニュー画面\n    this.state = { mode: DEF.APP_MODE.MENU };\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.MODE_ELEMENTS.get(this.state.mode)}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { CookiesProvider } from 'react-cookie';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}