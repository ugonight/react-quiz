{"version":3,"sources":["define.js","Menu.js","Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","APP_MODE","MENU","QUIZ","DEF","require","Login","props","useState","value","setValue","isWrong","triedLogin","isLogin","Modal","show","onHide","backdrop","keyboard","Header","Title","Body","Form","Row","className","Group","as","controlId","Label","column","sm","Col","Control","type","placeholder","onChange","e","target","isInvalid","Feedback","Footer","Button","variant","onClick","checkLogin","Menu","cookies","state","get","pass","this","res","setState","set","Container","i","mb","size","Check","inline","label","id","block","changeMode","React","Component","withCookies","Question","Choices","choiceList","choices","ToggleButtonGroup","name","vertical","input","map","choice","idx","isAnswered","correct","select","answer","includes","ToggleButton","disabled","TextBox","InputGroup","Prepend","Text","FormControl","aria-label","aria-describedby","readOnly","isValid","UserInput","inputEl","question","Result","isCorrect","headMsg","Alert","transition","Collapse","Heading","comment","Game","questionNum","file_json","questions","Array","isArray","sort","length","JSON","stringify","section","sentence","changeInput","clickOK","Quiz","App","att","mode","MODE_ELEMENTS","Map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.285223e0.chunk.js","sourcesContent":["var APP_MODE = {\r\n    MENU: 0,\r\n    QUIZ: 1\r\n};\r\n\r\nmodule.exports = {\r\n    APP_MODE\r\n};","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Form, Button, Modal } from \"react-bootstrap\";\r\nimport { instanceOf } from 'prop-types';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\n\r\nvar DEF = require(\"./define\");\r\n\r\nfunction Login(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  var isWrong = props.triedLogin && !props.isLogin;\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={!props.isLogin}\r\n        onHide={() => { }}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Login</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Row className=\"ml-2 mb-3\">ログインしろよ（笑）</Row>\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n              <Form.Label column sm=\"2\">\r\n                Password\r\n              </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => { setValue(e.target.value) }} isInvalid={isWrong} />\r\n                {isWrong && <Form.Control.Feedback type=\"invalid\">間違っとるよ（笑）</Form.Control.Feedback>}\r\n              </Col>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={(e) => props.checkLogin(value)}>OK</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>);\r\n}\r\n\r\nclass Menu extends React.Component {\r\n  static propTypes = {\r\n    cookies: instanceOf(Cookies).isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { cookies } = props;\r\n    this.state = {\r\n      isLogin: cookies.get('isLogin') || false,\r\n      triedLogin: false\r\n    };\r\n  }\r\n\r\n  checkLogin(pass) {\r\n    const { cookies } = this.props;\r\n\r\n    var res = pass === \"wara\";\r\n    this.setState({\r\n      isLogin: res,\r\n      triedLogin: true\r\n    });\r\n\r\n    cookies.set('isLogin', res);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h1>メニュー</h1>\r\n\r\n        <Login isLogin={this.state.isLogin} triedLogin={this.state.triedLogin} checkLogin={(i) => this.checkLogin(i)} />\r\n\r\n        <Form className=\"border border-dark rounded\">\r\n          <Form.Group as={Row} controlId=\"category\" mb={3} className=\"mt-3 mx-3\">\r\n            <Form.Label column sm=\"2\">\r\n              カテゴリ\r\n          </Form.Label>\r\n            <Col sm=\"10\">\r\n              <Row>\r\n                <Col>\r\n                  <Button variant=\"outline-primary\" size=\"sm\">\r\n                    すべて切り替え\r\n                  </Button>\r\n                </Col>\r\n                <Col>\r\n                  対象問題数: 100\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Form.Check inline label=\"chapter1\" type=\"checkbox\" id=\"1\" />\r\n                <Form.Check inline label=\"chapter2\" type=\"checkbox\" id=\"2\" />\r\n                <Form.Check inline label=\"chapter3\" type=\"checkbox\" id=\"3\" />\r\n              </Row>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} controlId=\"NumberOfQuestions\" mb={3} className=\"mt-3 mx-3\">\r\n            <Form.Label column sm=\"2\">\r\n              出題数\r\n          </Form.Label>\r\n            <Col sm=\"5\">\r\n              <Form.Control type=\"number\" />\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <Row className=\"d-grid gap-2 col-6 mx-auto mt-3\" mb={3}>\r\n          <Button variant=\"primary\" size=\"lg\" block onClick={(e) => this.props.changeMode(DEF.APP_MODE.QUIZ)} >\r\n            開始\r\n          </Button>\r\n        </Row>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withCookies(Menu);","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  ToggleButtonGroup,\r\n  ToggleButton,\r\n  Button,\r\n  Alert,\r\n  Collapse,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\n\r\nfunction Question(props) {\r\n  return <div className=\"question\">{props.value}</div>;\r\n}\r\n\r\nfunction Choices(props) {\r\n  const choiceList = props.choices;\r\n\r\n  return (\r\n    <ToggleButtonGroup\r\n      type={props.type}\r\n      name=\"options\"\r\n      vertical\r\n      className=\"choices\"\r\n      value={props.input}\r\n      onChange={props.onChange}\r\n    >\r\n      {choiceList.map((choice, idx) => {\r\n        var variant = \"outline-dark\";\r\n        // 回答後ならボタンの色を変える\r\n        if (props.isAnswered) {\r\n          var correct = false, select = false;\r\n\r\n          // 一択\r\n          if (props.type === \"radio\") {\r\n            correct = (idx === props.answer);\r\n            select = (idx === props.input);\r\n\r\n            // 正解・選択\r\n            if (correct && select) {\r\n              variant = \"success\";\r\n            }\r\n            // 正解・未選択\r\n            else if (correct) {\r\n              variant = \"warning\";\r\n            }\r\n            // 不正解・選択\r\n            else if (select) {\r\n              variant = \"danger\";\r\n            }\r\n          }\r\n          // 複数回答\r\n          else if (props.type === \"checkbox\") {\r\n            correct = (props.answer.includes(idx));\r\n            select = (props.input.includes(idx));\r\n\r\n            // 正解・選択\r\n            if (correct && select) {\r\n              variant = \"success\";\r\n            }\r\n            // 正解・未選択\r\n            else if (correct) {\r\n              variant = \"warning\";\r\n            }\r\n            // 不正解・選択\r\n            else if (select) {\r\n              variant = \"danger\";\r\n            }\r\n          }\r\n        }\r\n\r\n        return (\r\n          <ToggleButton\r\n            key={idx}\r\n            variant={variant}\r\n            className=\"choice mt-2\"\r\n            name=\"radio\"\r\n            value={idx}\r\n            disabled={props.isAnswered}\r\n          >\r\n            {choice}\r\n          </ToggleButton>\r\n        );\r\n      })}\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n\r\nfunction TextBox(props) {\r\n  var isWrong = props.isAnswered && props.input !== props.answer;\r\n\r\n  return (\r\n    <InputGroup className=\"mb-3\">\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text id=\"inputGroup-sizing-default\">回答</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n\r\n      <FormControl\r\n        aria-label=\"Default\"\r\n        aria-describedby=\"inputGroup-sizing-default\"\r\n        onChange={(i) => props.onChange(i.target.value)}\r\n        readOnly={props.isAnswered}\r\n        isInvalid={isWrong}\r\n        isValid={props.isAnswered && !isWrong}\r\n      />\r\n      {isWrong && <FormControl.Feedback type=\"invalid\">\r\n        {\"答え: \" + props.answer}\r\n      </FormControl.Feedback>}\r\n\r\n    </InputGroup>\r\n  );\r\n}\r\n\r\nfunction UserInput(props) {\r\n  var inputEl;\r\n\r\n  var choices = props.question.choices;\r\n  var onChange = props.onChange;\r\n  var isAnswered = props.state.isAnswered;\r\n  var input = props.state.input;\r\n  var answer = props.question.answer;\r\n  var type = props.question.type;\r\n\r\n  if (type === \"radio\" || type === \"checkbox\") {\r\n    inputEl = (\r\n      <Choices\r\n        choices={choices}\r\n        onChange={onChange}\r\n        isAnswered={isAnswered}\r\n        input={input}\r\n        answer={answer}\r\n        type={type}\r\n      />\r\n    );\r\n  } else if (type === \"text\") {\r\n    inputEl = (\r\n      <TextBox\r\n        onChange={onChange}\r\n        isAnswered={isAnswered}\r\n        input={input}\r\n        answer={answer}\r\n        type={type}\r\n      />\r\n    );\r\n  }\r\n\r\n  return inputEl;\r\n}\r\n\r\nfunction Result(props) {\r\n  var variant = props.isCorrect ? \"success\" : \"danger\";\r\n  var headMsg = props.isCorrect ? \"正解！\" : \"不正解！ｗ\";\r\n\r\n  return (\r\n    <>\r\n      <Alert variant={variant} show={props.show} transition={Collapse}>\r\n        <Alert.Heading>{headMsg}</Alert.Heading>\r\n        <hr />\r\n        <p className=\"mb-0\">{props.comment}</p>\r\n      </Alert>\r\n    </>\r\n  );\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: null,\r\n      isAnswered: false,\r\n      isCorrect: false,\r\n      questionNum: 0\r\n    };\r\n    this.file_json = require(\"./question01.json\");\r\n    this.question = this.file_json.questions[this.state.questionNum];\r\n  }\r\n\r\n  changeInput(i) {\r\n    var input = i;\r\n\r\n    // 配列はソートする\r\n    if (Array.isArray(input)) {\r\n      input.sort();\r\n    }\r\n\r\n    this.setState({\r\n      input: input\r\n    });\r\n  }\r\n\r\n  clickOK(e) {\r\n    if (!this.state.isAnswered) {\r\n      // 答え合わせ\r\n      this.setState({\r\n        isAnswered: true,\r\n        isCorrect:\r\n          JSON.stringify(this.state.input) ===\r\n          JSON.stringify(this.question.answer)\r\n      });\r\n    } else {\r\n      // 次の問題へ\r\n\r\n      var questionNum = this.state.questionNum + 1;\r\n      if (questionNum >= this.file_json.questions.length) {\r\n        questionNum = 0;\r\n      }\r\n\r\n      this.setState({\r\n        input: null,\r\n        isAnswered: false,\r\n        questionNum: questionNum\r\n      });\r\n      this.question = this.file_json.questions[questionNum];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"header\">{this.file_json.section}</h1>\r\n\r\n        <Question value={this.question.sentence} />\r\n\r\n        <UserInput\r\n          onChange={(i) => this.changeInput(i)}\r\n          state={this.state}\r\n          question={this.question}\r\n        />\r\n\r\n        <Result\r\n          isCorrect={this.state.isCorrect}\r\n          comment={this.question.comment}\r\n          show={this.state.isAnswered}\r\n        />\r\n\r\n        <Button\r\n          variant=\"primary\"\r\n          size=\"lg\"\r\n          block\r\n          className=\"mt-4\"\r\n          onClick={(i) => this.clickOK(i)}\r\n          disabled={this.state.input == null}\r\n        >\r\n          {this.state.isAnswered ? \"次へ\" : \"決定\"}\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Quiz() {\r\n  return (\r\n    <Container>\r\n      <Game />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nimport Menu from \"./Menu\";\nimport Quiz from \"./Quiz\";\n\nvar DEF = require(\"./define\");\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // タグに渡す属性\n    var att = { changeMode: (i) => this.setState({ mode: i }) };\n\n    // モードとタグの対応\n    this.MODE_ELEMENTS = new Map();\n    this.MODE_ELEMENTS.set(DEF.APP_MODE.MENU, <Menu {...att} />);\n    this.MODE_ELEMENTS.set(DEF.APP_MODE.QUIZ, <Quiz {...att} />);\n\n    // 最初はメニュー画面\n    this.state = { mode: DEF.APP_MODE.MENU };\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.MODE_ELEMENTS.get(this.state.mode)}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { CookiesProvider } from 'react-cookie';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}